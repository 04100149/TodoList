@using TodoList.Data
    <div class="section" style="background-color: @GetBackgroundColor(Item)">
        <table>
            <tr>
                <td align="right" valign="top"><span class="oi oi-key"/></td>
                <td>
                    @Item.Id
                    <ul class="icon">
                        <li>
                            <span class="oi oi-pencil" @onclick=@(async ()=> await OnClickEditCallback.InvokeAsync(Item)) />
                        </li>
                        <li>
                            <span class="oi oi-check" @onclick=@(async ()=> await OnClickDoneCallback.InvokeAsync(Item)) />
                        </li>
                        <li>
                            <span class="oi oi-trash" @onclick=@(async ()=> await OnClickRemoveCallback.InvokeAsync(Item)) />
                        </li>
                    </ul>
                </td>
            </tr>
            <tr>
                <td align="right" valign="top"><span class="oi oi-tag"/></td>
                <td>@Item.Title</td>
            </tr>
            <tr>
                <td align="right" valign="top"><span class="oi oi-clock"/></td>
                <td>
                    @Item.TargetDate.ToString("yyyy/MM/dd")
                    @if(Item.IsDone)
                    {
                        <span class="oi oi-check" style="margin-left: 10px;"/>
                        @Item.EndDate.ToString("yyyy/MM/dd")
                    }
                    else
                    {
                        var days = (Item.TargetDate - DateTime.Today).Days;
                        @if(days == 0)
                        {
                            <span style="color: red; margin-left: 10px;">今日まで！</span>
                        }
                        else if(days<0)
                        {
                            <span style="color: red; margin-left: 10px;">@(-days)日 オーバー</span>
                        }
                        else
                        {
                            <span style="color: black; margin-left: 10px;">あと @(days)日</span>                            
                        }
                    }
                </td>
            </tr>
            <tr>
                <td align="right" valign="top"><span class="oi oi-comment-square"/></td>
                <td ><p class="ellipsis" title=@Item.Memo>@Item.Memo</p></td>
            </tr>
        </table>
    </div>

@code {
    [Parameter]
    public TodoItem Item { get; set; }

    [Parameter]
    public EventCallback<TodoItem> OnClickEditCallback { get; set; }

    [Parameter]
    public EventCallback<TodoItem> OnClickDoneCallback { get; set; }

    [Parameter]
    public EventCallback<TodoItem> OnClickRemoveCallback { get; set; }

    private string GetBackgroundColor(TodoItem Item)
    {
        if (Item.IsDone){ return "silver"; }
        if (Item.TargetDate == DateTime.Today) { return "khaki"; }
        if (Item.TargetDate < DateTime.Today) { return "lightpink"; }
        return "lightblue";
    }
}